{"version":3,"sources":["components/Business/Business.js","components/BusinessList/BusinessList.js","components/SearchBar/SearchBar.js","util/Yelp.js","App.js","serviceWorker.js","index.js"],"names":["Business","react_default","a","createElement","className","src","this","props","business","imageSrc","alt","name","address","state","zipCode","category","rating","reviewCount","React","Component","BusinessList","businesses","map","components_Business_Business","key","id","sortByOptions","Best Match","Highest Rated","Most Reviewed","SearchBar","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","term","location","sortBy","handleTermChange","bind","assertThisInitialized","handleLocationChange","handleSearch","sortByOption","setState","event","target","value","searchYelp","preventDefault","_this2","keys","sortByOptionValue","getSortByClass","onClick","handleSortByChange","renderSortByOptions","placeholder","onChange","href","Yelp","fetch","concat","headers","Authorization","then","response","console","log","json","jsonResponse","image_url","address1","city","zip_code","categories","title","review_count","App","catch","reason","components_SearchBar_SearchBar","components_BusinessList_BusinessList","Boolean","window","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"4TA8BeA,sMAzBX,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,OACCE,IAAKC,KAAKC,MAAMC,SAASC,SACzBC,IAAKJ,KAAKC,MAAMC,SAASG,QAE5BV,EAAAC,EAAAC,cAAA,UAAKG,KAAKC,MAAMC,SAASG,MACzBV,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAAA,SAAIG,KAAKC,MAAMC,SAASI,SACxBX,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,SAAIG,KAAKC,MAAMC,SAASK,MAAxB,IAAgCP,KAAKC,MAAMC,SAASM,UAEtDb,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAAA,UAAKG,KAAKC,MAAMC,SAASO,UACzBd,EAAAC,EAAAC,cAAA,MAAIC,UAAU,UAAUE,KAAKC,MAAMC,SAASQ,OAA5C,UACAf,EAAAC,EAAAC,cAAA,SAAIG,KAAKC,MAAMC,SAASS,YAAxB,sBAnBaC,IAAMC,YCcZC,mLAXb,OACEnB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAEXE,KAAKC,MAAMc,WAAWC,IAAI,SAAAd,GAAQ,OAClCP,EAAAC,EAAAC,cAACoB,EAAD,CAAUC,IAAKhB,EAASiB,GAAIjB,SAAUA,cANrBU,IAAMC,WCD3BO,SAAe,CACjBC,aAAc,aACdC,gBAAiB,SACjBC,gBAAiB,iBA4ENC,cAxEX,SAAAA,EAAYvB,GAAM,IAAAwB,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAA1B,KAAAwB,IACdC,EAAAC,OAAAE,EAAA,EAAAF,CAAA1B,KAAA0B,OAAAG,EAAA,EAAAH,CAAAF,GAAAM,KAAA9B,KAAMC,KACDM,MAAM,CACPwB,KAAK,GACLC,SAAS,GACTC,OAAO,cAEXR,EAAKS,iBAAkBT,EAAKS,iBAAiBC,KAAtBT,OAAAU,EAAA,EAAAV,CAAAD,IACvBA,EAAKY,qBAAqBZ,EAAKY,qBAAqBF,KAA1BT,OAAAU,EAAA,EAAAV,CAAAD,IAC1BA,EAAKa,aAAab,EAAKa,aAAaH,KAAlBT,OAAAU,EAAA,EAAAV,CAAAD,IATJA,8EAYHc,GACX,OAAIA,IAAiBvC,KAAKO,MAAM0B,OACrB,SAGI,8CAGAM,GACfvC,KAAKwC,SAAS,CACVP,OAASM,6CAGAE,GACbzC,KAAKwC,SAAS,CAACT,KAAKU,EAAMC,OAAOC,qDAIhBF,GACjBzC,KAAKwC,SAAS,CAACR,SAASS,EAAMC,OAAOC,6CAI5BF,GACLzC,KAAKC,MAAM2C,WAAW5C,KAAKO,MAAMwB,KAAM/B,KAAKO,MAAMyB,SAAUhC,KAAKO,MAAM0B,QACvEQ,EAAMI,+DAGQ,IAAAC,EAAA9C,KAClB,OAAO0B,OAAOqB,KAAK3B,GAAeJ,IAAI,SAAAuB,GAElC,IAAIS,EAAoB5B,EAAcmB,GACtC,OAAO5C,EAAAC,EAAAC,cAAA,MACPqB,IAAK8B,EACLlD,UAAYgD,EAAKG,eAAeD,GAChCE,QAASJ,EAAKK,mBAAmBhB,KAAKW,EAAME,IAC3CT,sCAML,OACI5C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BACXH,EAAAC,EAAAC,cAAA,UACEG,KAAKoD,wBAGXzD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,SAAOwD,YAAY,oBAAoBC,SAAUtD,KAAKkC,mBACtDvC,EAAAC,EAAAC,cAAA,SAAOwD,YAAY,SAASC,SAAUtD,KAAKqC,wBAE/C1C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,KAAG0D,KAAK,IAAIL,QAASlD,KAAKsC,cAA1B,qBAnEI1B,IAAMC,WCuBf2C,EA/BF,CACTZ,WADS,SACEb,EAAMC,EAAUC,GACvB,OAAOwB,MAAK,sFAAAC,OAAuF3B,EAAvF,cAAA2B,OAAwG1B,EAAxG,aAAA0B,OAA4HzB,GAAU,CAC9I0B,QAAS,CACLC,cAAa,UAAAF,OALhB,uIAQJG,KAAK,SAACC,GAEH,OADAC,QAAQC,IAAI,WAAYF,GACjBA,EAASG,SAEnBJ,KAAK,SAACK,GACH,GAAGA,EAAanD,WACZ,OAAOmD,EAAanD,WAAWC,IAAI,SAACd,GAChC,MAAQ,CACJiB,GAAIjB,EAASiB,GACbhB,SAAUD,EAASiE,UACnB9D,KAAMH,EAASG,KACfC,QAASJ,EAAS8B,SAASoC,SAC3BC,KAAMnE,EAAS8B,SAASqC,KACxB9D,MAAOL,EAAS8B,SAASzB,MACzBC,QAASN,EAAS8B,SAASsC,SAC3B7D,SAAUP,EAASqE,WAAW,GAAGC,MACjC9D,OAAQR,EAASQ,OACjBC,YAAaT,EAASuE,oBCY/BC,cA9Bb,SAAAA,EAAYzE,GAAM,IAAAwB,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAA1B,KAAA0E,IAChBjD,EAAAC,OAAAE,EAAA,EAAAF,CAAA1B,KAAA0B,OAAAG,EAAA,EAAAH,CAAAgD,GAAA5C,KAAA9B,KAAMC,KACDM,MAAM,CACTQ,WAAY,IAEdU,EAAKmB,WAAYnB,EAAKmB,WAAWT,KAAhBT,OAAAU,EAAA,EAAAV,CAAAD,IALDA,0EAQPM,EAAMC,EAASC,GAAO,IAAAa,EAAA9C,KAC/BwD,EAAKZ,WAAWb,EAAMC,EAAUC,GAC7B4B,KAAK,SAAC9C,GACLgD,QAAQC,IAAI,aAAcjD,GAC1B+B,EAAKN,SAAS,CAACzB,WAAYA,MAE5B4D,MAAM,SAACC,uCAMV,OACEjF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAACgF,EAAD,CAAWjC,WAAY5C,KAAK4C,aAC5BjD,EAAAC,EAAAC,cAACiF,EAAD,CAAc/D,WAAYf,KAAKO,MAAMQ,qBAzB3BH,IAAMC,WCMJkE,QACW,cAA7BC,OAAOhD,SAASiD,UAEe,UAA7BD,OAAOhD,SAASiD,UAEhBD,OAAOhD,SAASiD,SAASC,MACvB,2DCZNC,IAASC,OAAOzF,EAAAC,EAAAC,cAACwF,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM7B,KAAK,SAAA8B,GACjCA,EAAaC","file":"static/js/main.25714ec1.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Business.css';\r\n\r\nclass Business extends React.Component {\r\n  render(){\r\n    return (\r\n      <div className=\"Business\">\r\n      <div className=\"image-container\">\r\n        <img \r\n         src={this.props.business.imageSrc}\r\n         alt={this.props.business.name}/>\r\n      </div>\r\n      <h2>{this.props.business.name}</h2>\r\n      <div className=\"Business-information\">\r\n        <div className=\"Business-address\">\r\n          <p>{this.props.business.address}</p>\r\n          <p>Bordertown</p>\r\n          <p>{this.props.business.state} {this.props.business.zipCode}</p>\r\n        </div>\r\n        <div className=\"Business-reviews\">\r\n          <h3>{this.props.business.category}</h3>\r\n          <h3 className=\"rating\">{this.props.business.rating} stars</h3>\r\n          <p>{this.props.business.reviewCount} reviews</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    );\r\n  };\r\n}\r\n\r\nexport default Business;","import React from 'react';\r\nimport './BusinessList.css';\r\nimport Business from '../Business/Business';\r\n\r\nclass BusinessList extends React.Component {\r\n  render(){\r\n    return (\r\n      <div className=\"BusinessList\">\r\n        {\r\n          this.props.businesses.map(business => \r\n          <Business key={business.id} business={business}/>\r\n          )\r\n        }\r\n      </div>\r\n      );\r\n    }\r\n  }\r\n  export default BusinessList;","import React from 'react';\r\nimport './SearchBar.css';\r\n\r\nconst sortByOptions= {\r\n    'Best Match': 'best_match',\r\n    'Highest Rated': 'rating',\r\n    'Most Reviewed': 'review_count'\r\n}\r\n\r\nclass SearchBar extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            term:'',\r\n            location:'',\r\n            sortBy:'best_match'\r\n        };\r\n        this.handleTermChange= this.handleTermChange.bind(this);\r\n        this.handleLocationChange=this.handleLocationChange.bind(this);\r\n        this.handleSearch=this.handleSearch.bind(this);\r\n\r\n    }\r\n    getSortByClass(sortByOption){\r\n        if( sortByOption === this.state.sortBy) {\r\n            return 'active'\r\n        } \r\n            else {\r\n                return ''\r\n            }  \r\n        }\r\n    handleSortByChange(sortByOption){\r\n        this.setState({\r\n            sortBy : sortByOption\r\n        });\r\n    }\r\n    handleTermChange(event){\r\n        this.setState({term:event.target.value});\r\n\r\n    }\r\n\r\n    handleLocationChange(event){\r\n        this.setState({location:event.target.value});\r\n\r\n    }\r\n\r\n    handleSearch(event){\r\n            this.props.searchYelp(this.state.term, this.state.location, this.state.sortBy);\r\n            event.preventDefault();\r\n    }\r\n\r\n    renderSortByOptions() {\r\n        return Object.keys(sortByOptions).map(sortByOption => \r\n        {\r\n            let sortByOptionValue = sortByOptions[sortByOption];\r\n            return <li \r\n            key={sortByOptionValue} \r\n            className ={this.getSortByClass(sortByOptionValue)} \r\n            onClick={this.handleSortByChange.bind(this, sortByOptionValue)}> \r\n            {sortByOption} \r\n            </li>\r\n         });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"SearchBar\">\r\n                <div className=\"SearchBar-sort-options\">\r\n                    <ul>\r\n                    { this.renderSortByOptions() }\r\n                    </ul>\r\n                </div>\r\n                <div className=\"SearchBar-fields\">\r\n                    <input placeholder=\"Search Businesses\" onChange={this.handleTermChange}/>\r\n                    <input placeholder=\"Where?\" onChange={this.handleLocationChange}/>\r\n                </div>\r\n                <div className=\"SearchBar-submit\">\r\n                    <a href=\"#\" onClick={this.handleSearch} >Let's Go</a>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default SearchBar;\r\n","const apiKey=\"xo4_Hla9gmN2Rdr8DfTomCqzCwbr94p45J64U0rRQLrG3arG_oTxa3qlDdOX7RHA4U9-X4U3okqSiI_WZ4CqTVlEJToSIfkh7eoEMh6HwhhUHzQtYukBQlMuaujPXHYx\";\r\nconst Yelp = {\r\n    searchYelp(term, location, sortBy) {\r\n        return fetch(`https://cors-anywhere.herokuapp.com/https://api.yelp.com/v3/businesses/search?term=${term}&location=${location}&sort_by=${sortBy}`, {\r\n            headers: {\r\n                Authorization: `Bearer ${apiKey}`,\r\n            }          \r\n        })\r\n        .then((response) => {\r\n            console.log('response', response)\r\n            return response.json();\r\n        })\r\n        .then((jsonResponse) => {\r\n            if(jsonResponse.businesses){\r\n                return jsonResponse.businesses.map((business)=>{\r\n                    return ({\r\n                        id: business.id,\r\n                        imageSrc: business.image_url,\r\n                        name: business.name,\r\n                        address: business.location.address1,\r\n                        city: business.location.city,\r\n                        state: business.location.state,\r\n                        zipCode: business.location.zip_code,\r\n                        category: business.categories[0].title,\r\n                        rating: business.rating,\r\n                        reviewCount: business.review_count\r\n                    });\r\n                });\r\n            }\r\n        });\r\n    }\r\n};\r\nexport default Yelp;","import React from 'react';\r\nimport './App.css';\r\nimport BusinessList from './components/BusinessList/BusinessList';\r\nimport SearchBar from './components/SearchBar/SearchBar';\r\nimport Yelp from './util/Yelp';\r\n\r\nclass App extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state={\r\n      businesses: []\r\n    };\r\n    this.searchYelp= this.searchYelp.bind(this);\r\n  }\r\n\r\n  searchYelp(term, location,sortBy){\r\n    Yelp.searchYelp(term, location, sortBy)\r\n      .then((businesses)=>{\r\n        console.log('searchYelp', businesses)\r\n        this.setState({businesses: businesses});\r\n      })\r\n      .catch((reason) => {\r\n\r\n      });\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div className=\"App\">\r\n        <h1>ravenous</h1>\r\n        <SearchBar searchYelp={this.searchYelp} />\r\n        <BusinessList businesses={this.state.businesses} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}